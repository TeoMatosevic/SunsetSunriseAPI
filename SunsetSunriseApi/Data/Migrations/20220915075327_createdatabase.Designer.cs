// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherApi.Context;

#nullable disable

namespace SunsetSunriseApi.Data.Migrations
{
    [DbContext(typeof(SunsetSunriseDbContext))]
    [Migration("20220915075327_createdatabase")]
    partial class createdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SunsetSunriseApi.Data.CurrentTimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("zoneDif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrentTimeZones");
                });

            modelBuilder.Entity("SunsetSunriseApi.Data.TimeAdjustment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("adjusstment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("season")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TimeAdjustments");
                });

            modelBuilder.Entity("SunsetSunriseApi.Data.TimeZonesMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("zoneDif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TimeZones");
                });

            modelBuilder.Entity("WeatherApi.Models.SunsetSunriseDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("astronomical_twilight_begin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("astronomical_twilight_end")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("civil_twilight_begin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("civil_twilight_end")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("day_length")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.Property<string>("nautical_twilight_begin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nautical_twilight_end")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("solar_noon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sunrise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sunset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SunsetSunrises");
                });
#pragma warning restore 612, 618
        }
    }
}
